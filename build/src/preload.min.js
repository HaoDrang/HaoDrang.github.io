function Preload() {
}

function PreloadProgressBar(a, b, c, d, e, f, g, h, i, j, k) {
    this.posX = a, this.poxY = b, this.w = c, this.h = d, this.radius = e, this.offsetx = f, 
    this.offsety = g, this.color = createjs.Graphics.getRGB(h, i, j, k), this.strokecolor = createjs.Graphics.getRGB(0, 0, 0, 1), 
    this.bgcolor = createjs.Graphics.getRGB(200, 200, 200, 1), this.innerX = this.posX + this.offsetx, 
    this.innerY = this.poxY + this.offsety, this.innerW = this.w - 2 * this.offsetx, 
    this.innerH = this.h - 2 * this.offsety;
}

function resizeCanvas(a) {
    var b = a.canvas, c = 0, d = 0, e = CANVAS_W, f = CANVAS_H;
    c = jQuery(window).width(), d = jQuery(window).height();
    var g = 1;
    e / f > c / d ? (g = c / e, b.width = c, b.height = g * f) : (g = d / f, b.height = d, 
    b.width = g * e), rescaleStage(a, g);
}

function rescaleStage(a, b) {
    a.scaleX = a.scaleY = b, a.update();
}

var CANVAS_W = 540, CANVAS_H = 960;

Preload.prototype = new createjs.Container(), Preload.prototype.container_initialize = Preload.prototype.initialize, 
Preload.prototype.initialize = function() {
    this.container_initialize();
    var a = document.getElementById("gameCanvas");
    CANVAS_W = a.width, CANVAS_H = a.height, console.log("game canvas created...");
    var b = new createjs.Stage(a);
    _stage = b, console.log("stage is ready..."), this.buildUI(b), resizeCanvas(b);
    var c = 0;
    jQuery(window).resize(function() {
        resizeCanvas(b), c && progressBar.updateProgress(c, 100), console.log("width :" + b.canvas.width + " , height : " + b.canvas.height);
    });
    this.initLoader(progressBar);
}, Preload.prototype.buildUI = function(a) {
    var b = CANVAS_W - 40, c = 30, d = (CANVAS_W - b) / 2, e = (CANVAS_H - c) / 2;
    progressBar = new PreloadProgressBar(d, e, b, c, 5, 2, 2, 80, 200, 80, 1), progressBar.scaleX = progressBar.scaleY = a.scaleX, 
    a.addChild(progressBar), progressBar.updateProgress(5, 100), a.update(), console.log("x " + progressBar.x + " y:" + progressBar.y), 
    console.log("stage " + a.canvas.width + "  " + a.canvas.height);
};

var updateFun;

Preload.prototype.initLoader = function() {
    return updateFun = progressBar, createjs.Ticker.addEventListener("tick", this.testUpdate), 
    console.log("initLoader called"), null;
};

var tickCount = 0;

Preload.prototype.testUpdate = function() {
    tickCount >= 100 && (tickCount = 0), updateFun.updateProgress(tickCount++, 100), 
    _stage.update();
}, PreloadProgressBar.prototype = new createjs.Shape(), PreloadProgressBar.prototype.updateProgress = function(a, b) {
    this.graphics.clear(), this.graphics.beginFill(this.strokecolor).drawRoundRect(this.posX, this.poxY, this.w, this.h, this.radius, this.radius, this.radius, this.radius), 
    this.graphics.beginFill(this.bgcolor).drawRoundRect(this.innerX, this.innerY, this.innerW, this.innerH, this.radius, this.radius, this.radius, this.radius), 
    this.graphics.beginFill(this.color).drawRoundRect(this.innerX, this.innerY, this.innerW * a / b, this.innerH, this.radius, this.radius, this.radius, this.radius), 
    this.graphics.endFill(), console.log("ProgressBar pos X:" + this.x + ", Y:" + this.y);
};